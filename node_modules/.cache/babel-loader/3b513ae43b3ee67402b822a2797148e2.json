{"ast":null,"code":"var _jsxFileName = \"/home/ahmadg/Desktop/chat-challenge/src/App.js\";\nimport React, { Component } from \"react\";\nimport io from \"socket.io-client\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { Picker } from \"emoji-mart\";\nimport Img from \"../src/img1.jpg\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isConnected: false,\n      id: null,\n      userList: [],\n      message_from_server: \"\",\n      inputResult: \"\",\n      chat: [],\n      showEmojis: false\n    };\n    this.socket = null;\n\n    this.showEmojis = e => {\n      this.setState({\n        showEmojis: true\n      }, () => document.addEventListener(\"click\", this.closeMenu));\n    };\n\n    this.closeMenu = e => {\n      console.log(this.emojiPicker);\n\n      if (this.emojiPicker !== null && !this.emojiPicker.contains(e.target)) {\n        this.setState({\n          showEmojis: false\n        }, () => document.removeEventListener(\"click\", this.closeMenu));\n      }\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        inputResult: e.target.value\n      });\n    };\n\n    this.addEmoji = e => {\n      let sym = e.unified.split(\"-\");\n      let codesArray = [];\n      sym.forEach(el => codesArray.push(\"0x\" + el));\n      let emoji = String.fromCodePoint(...codesArray);\n      this.setState({\n        inputResult: this.state.inputResult + emoji\n      });\n    };\n  }\n\n  componentWillMount() {\n    this.socket = io(\"https://codi-server.herokuapp.com\");\n    this.socket.on(\"connect\", () => {\n      this.setState({\n        isConnected: true\n      });\n    });\n    this.socket.on(\"disconnect\", () => {\n      this.setState({\n        isConnected: false\n      });\n    });\n    this.socket.on(\"youare\", answer => {\n      this.setState({\n        id: answer.id\n      });\n    });\n    this.socket.on(\"peeps\", data => {\n      this.setState({\n        userList: data\n      });\n    });\n    this.socket.on(\"new connection\", NewUser => {\n      console.log(\"new connection\", NewUser);\n      const users = [...this.state.userList, NewUser];\n      this.setState({\n        userList: users\n      });\n    });\n    this.socket.on(\"new disconnection\", DisconnectUser => {\n      console.log(\"new disconnection\", DisconnectUser);\n      const filteredUsers = this.state.userList.filter(function (item) {\n        return item !== DisconnectUser;\n      });\n      this.setState({\n        userList: filteredUsers\n      });\n    });\n    /** this will be useful way, way later **/\n\n    this.socket.on(\"room\", old_messages => {\n      this.setState({\n        chat: old_messages\n      });\n      console.log(old_messages);\n    });\n  }\n\n  componentWillUnmount() {\n    this.socket.close();\n    this.socket = null;\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      style: {\n        backgroundColor: \"peach\",\n        backgroundImage: \"Img\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, \"status: \", this.state.isConnected ? \"connected\" : \"disconnected\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, \"id: \", this.state.id), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        marginLeft: \"70px\",\n        width: \"60%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        border: \"solid 0px\",\n        backgroundColor: \"#54798a\",\n        width: \"100%\",\n        borderRadius: \"20px\",\n        paddingRight: \"25px\",\n        color: \"white\",\n        marginRight: \"10px\",\n        display: \"block\",\n        height: \"400px\",\n        overflowY: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      cellspacing: \"10\",\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }, this.state.chat.map(user => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }, user.name), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        border: \"solid 0px\",\n        backgroundColor: \"green\",\n        borderRadius: \"10px\",\n        width: \"100%\",\n        padding: \"6px 0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }, user.text)))))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        border: \"solid\",\n        color: \"white\",\n        backgroundColor: \"#54798a\",\n        padding: \"10px\",\n        borderRadius: \"20px\",\n        display: \"block\",\n        height: \"400px\",\n        overflowY: \"scroll\",\n        marginRight: \"50px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    }, \"Online User IDs:\"), /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }, this.state.userList.map(user => /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }, user))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }, \"Online Users:\", this.state.userList.length))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: \"#54798a\",\n        width: \"58%\",\n        marginLeft: \"70px\",\n        borderRadius: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.inputResult,\n      onChange: this.handleChange,\n      placeholder: \"Type your message ...\",\n      size: \"50\",\n      style: {\n        marginLeft: \"100px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        this.socket.emit(\"message\", {\n          id: this.state.id,\n          name: \"test\",\n          text: this.state.inputResult\n        });\n        this.setState({\n          inputResult: \"\"\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }\n    }, \"send\"))), this.state.showEmojis ? /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        marginLeft: \"415px\",\n        marginTop: \"-460px\",\n        position: \"absolute\"\n      },\n      ref: el => this.emojiPicker = el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Picker, {\n      onSelect: this.addEmoji,\n      emojiTooltip: true,\n      title: \"weChat\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }\n    })) : /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        marginLeft: \"600px\",\n        marginTop: \"-25px\",\n        position: \"absolute\"\n      },\n      onClick: this.showEmojis,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }\n    }, String.fromCodePoint(0x1f60a)), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ahmadg/Desktop/chat-challenge/src/App.js"],"names":["React","Component","io","Picker","Img","App","state","isConnected","id","userList","message_from_server","inputResult","chat","showEmojis","socket","e","setState","document","addEventListener","closeMenu","console","log","emojiPicker","contains","target","removeEventListener","handleChange","value","addEmoji","sym","unified","split","codesArray","forEach","el","push","emoji","String","fromCodePoint","componentWillMount","on","answer","data","NewUser","users","DisconnectUser","filteredUsers","filter","item","old_messages","componentWillUnmount","close","handleSubmit","event","preventDefault","render","backgroundColor","backgroundImage","display","justifyContent","marginLeft","width","border","borderRadius","paddingRight","color","marginRight","height","overflowY","map","user","name","padding","text","textAlign","length","emit","marginTop","position"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport io from \"socket.io-client\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { Picker } from \"emoji-mart\";\nimport Img from \"../src/img1.jpg\";\n\nclass App extends Component {\n  state = {\n    isConnected: false,\n    id: null,\n    userList: [],\n    message_from_server: \"\",\n    inputResult: \"\",\n    chat: [],\n    showEmojis: false\n  };\n  socket = null;\n  showEmojis = e => {\n    this.setState(\n      {\n        showEmojis: true\n      },\n      () => document.addEventListener(\"click\", this.closeMenu)\n    );\n  };\n\n  closeMenu = e => {\n    console.log(this.emojiPicker);\n    if (this.emojiPicker !== null && !this.emojiPicker.contains(e.target)) {\n      this.setState(\n        {\n          showEmojis: false\n        },\n        () => document.removeEventListener(\"click\", this.closeMenu)\n      );\n    }\n  };\n  handleChange = e => {\n    this.setState({ inputResult: e.target.value });\n  };\n  componentWillMount() {\n    this.socket = io(\"https://codi-server.herokuapp.com\");\n\n    this.socket.on(\"connect\", () => {\n      this.setState({ isConnected: true });\n    });\n\n    this.socket.on(\"disconnect\", () => {\n      this.setState({ isConnected: false });\n    });\n    this.socket.on(\"youare\", answer => {\n      this.setState({ id: answer.id });\n    });\n    this.socket.on(\"peeps\", data => {\n      this.setState({ userList: data });\n    });\n    this.socket.on(\"new connection\", NewUser => {\n      console.log(\"new connection\", NewUser);\n      const users = [...this.state.userList, NewUser];\n      this.setState({ userList: users });\n    });\n    this.socket.on(\"new disconnection\", DisconnectUser => {\n      console.log(\"new disconnection\", DisconnectUser);\n      const filteredUsers = this.state.userList.filter(function(item) {\n        return item !== DisconnectUser;\n      });\n      this.setState({ userList: filteredUsers });\n    });\n\n    /** this will be useful way, way later **/\n    this.socket.on(\"room\", old_messages => {\n      this.setState({ chat: old_messages });\n      console.log(old_messages);\n    });\n  }\n\n  componentWillUnmount() {\n    this.socket.close();\n    this.socket = null;\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n  addEmoji = e => {\n    let sym = e.unified.split(\"-\");\n    let codesArray = [];\n    sym.forEach(el => codesArray.push(\"0x\" + el));\n    let emoji = String.fromCodePoint(...codesArray);\n    this.setState({\n      inputResult: this.state.inputResult + emoji\n    });\n  };\n\n  render() {\n    return (\n      <div\n        className=\"App\"\n        style={{ backgroundColor: \"peach\", backgroundImage: \"Img\" }}\n      >\n        <div>\n          status: {this.state.isConnected ? \"connected\" : \"disconnected\"}\n        </div>\n        <div>id: {this.state.id}</div>\n        {/* <button onClick={() => this.socket.emit(\"whoami\")}>Who am I?</button> */}\n        <br />\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <div\n            style={{\n              display: \"flex\",\n              marginLeft: \"70px\",\n              width: \"60%\"\n            }}\n          >\n            <div\n              style={{\n                border: \"solid 0px\",\n                backgroundColor: \"#54798a\",\n                width: \"100%\",\n                borderRadius: \"20px\",\n                paddingRight: \"25px\",\n                color: \"white\",\n                marginRight: \"10px\",\n                display: \"block\",\n                height: \"400px\",\n                overflowY: \"auto\"\n              }}\n            >\n              <table cellspacing=\"10\" style={{ width: \"100%\" }}>\n                {this.state.chat.map(user => (\n                  <tr>\n                    <td>{user.name}</td>\n\n                    <td\n                      style={{\n                        border: \"solid 0px\",\n                        backgroundColor: \"green\",\n                        borderRadius: \"10px\",\n                        width: \"100%\",\n                        padding: \"6px 0px\"\n                      }}\n                    >\n                      {user.text}\n                    </td>\n                  </tr>\n                ))}\n              </table>\n            </div>\n          </div>\n          <div\n            style={{\n              border: \"solid\",\n              color: \"white\",\n              backgroundColor: \"#54798a\",\n              padding: \"10px\",\n              borderRadius: \"20px\",\n              display: \"block\",\n              height: \"400px\",\n              overflowY: \"scroll\",\n              marginRight: \"50px\"\n            }}\n          >\n            <div style={{ textAlign: \"center\" }}>Online User IDs:</div>\n            <ol>\n              {this.state.userList.map(user => (\n                <li>{user}</li>\n              ))}\n            </ol>\n            <div style={{ textAlign: \"center\" }}>\n              Online Users:{this.state.userList.length}\n            </div>\n          </div>\n        </div>\n        <div\n          style={{\n            backgroundColor: \"#54798a\",\n            width: \"58%\",\n            marginLeft: \"70px\",\n            borderRadius: \"10px\"\n          }}\n        >\n          <form onSubmit={this.handleSubmit}>\n            <input\n              value={this.state.inputResult}\n              onChange={this.handleChange}\n              placeholder=\"Type your message ...\"\n              size=\"50\"\n              style={{ marginLeft: \"100px\" }}\n            ></input>\n            <button\n              onClick={() => {\n                this.socket.emit(\"message\", {\n                  id: this.state.id,\n                  name: \"test\",\n                  text: this.state.inputResult\n                });\n\n                this.setState({ inputResult: \"\" });\n              }}\n            >\n              send\n            </button>\n          </form>\n        </div>\n        {this.state.showEmojis ? (\n          <span\n            style={{\n              marginLeft: \"415px\",\n              marginTop: \"-460px\",\n              position: \"absolute\"\n            }}\n            ref={el => (this.emojiPicker = el)}\n          >\n            <Picker\n              onSelect={this.addEmoji}\n              emojiTooltip={true}\n              title=\"weChat\"\n            />\n          </span>\n        ) : (\n          <p\n            style={{\n              marginLeft: \"600px\",\n              marginTop: \"-25px\",\n              position: \"absolute\"\n            }}\n            onClick={this.showEmojis}\n          >\n            {String.fromCodePoint(0x1f60a)}\n          </p>\n        )}\n        <br />\n        <br />\n        <br />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}